".vimrc_extension_01

set statusline=%m%r%h\ g:\%{GitBranchInfoString()}\ \|\ %p%%\ %l/%L\ %c\ \|\ %n\ %y\ %{\"[\".(&fenc==\"\"?&enc:&fenc).((exists(\"+bomb\")\ &&\ &bomb)?\",B\":\"\").\"]\ \"}\ %<%F
set laststatus=2
set showcmd                                             "show commamd line
set highlight=sr                                        "show status line in inverse video
set scrolloff=2                                         "always keep the indicated number of line above or below the cursor
set showtabline=2                                       "always display the tab line
set tabpagemax=15                                       "maximum number of tabs
set cursorline                                          "highlight current line
set history=5000                                        "set history depth
set smartcase                                           "override ignorecase option when search string use caps
set report=0                                            "always display report message
set matchpairs=(:),{:},[:],<:>
set wildmenu
set cmdwinheight=20
set timeoutlen=300

map ,_ <ESC>o_<ESC>vy78po<CR><CR><CR><CR>_<ESC>vy78po<CR><CR><ESC>5k
map ,, <ESC>:MRU<CR>
map ,ft <ESC>:NERDTreeToggle<CR>
map ,3 <ESC>:r !x.random_string<CR>
map ,5 <ESC>:silent !t<CR>
map ,6 <ESC>:w<CR>:!python3 %<CR>
map ,7 <ESC>:silent !gitk % &<CR>
map ,bu <ESC>:buffers<CR>
map ,co <ESC>:!gvim ~/.vimrc<CR><ESC>
map ,cl <ESC>:let @/=''<CR>
vmap // y/<C-R>"<CR>

if $TERM == 'tolerable'
    colorscheme less
elseif has ('gui_running')
    colorscheme pima_1
else
    colorscheme desert256
endif

if has ('gui_running')
    set guioptions-=T                                   "no gvim toolbar
    set guioptions-=m                                   "no gvim menu
    set mousehide                                       "hide the mouse when typing text
    set co=93                                           "gvim window size
    set lines=56
    set guifont=Droid\ Sans\ Mono\ 10                   "setting font
endif

"MRU
let MRU_Max_Entries=1000
let MRU_Window_Height=20

if filereadable(expand("~/_/.0x1share"))
    map ,ho <ESC>:sav! ~/_/00editor/00x<CR><ESC>:q<CR>
    map ,hi <ESC>:r! cat ~/_/00editor/00x<CR><ESC>
    map ,lo <ESC>:sav! ~/_/00browser/00x<CR><ESC>:q<CR>
    map ,li <ESC>:r! cat ~/_/00browser/00x<CR><ESC>
endif

if has("autocmd")
  augroup sh
    autocmd FileType sh set autoindent expandtab tabstop=8 softtabstop=2 shiftwidth=2 colorcolumn=79
  augroup END
  augroup ruby
    autocmd FileType ruby,eruby,yaml set autoindent expandtab tabstop=8 softtabstop=2 shiftwidth=2 colorcolumn=79
"    au BufReadPre,FileReadPre set kp=ri sw=2 ts=2 expandtab
  augroup END
  augroup python
    autocmd FileType python set autoindent expandtab tabstop=8 softtabstop=4 shiftwidth=4 colorcolumn=79
  augroup END
  augroup html
    autocmd FileType html,xhtml set autoindent expandtab tabstop=8 softtabstop=4 shiftwidth=4 colorcolumn=79
  augroup END
endif

iab 0dt <c-r>=strftime("%Y-%m-%d %H:%M:%S")<cr>

"silent source! Session.vim

"shortcuts
inoremap <c-j> <Esc>/φ<CR><Esc>cfφ
inoremap k( ()φφ<Esc>F)i
inoremap k[ []φφ<Esc>F]i
inoremap k{ {}φφ<Esc>F}i
inoremap k< <>φφ<Esc>F>i
inoremap k" ""φφ<Esc>F"i
inoremap k' ''φφ<Esc>F'i
inoremap k` ``φφ<Esc>F`i
inoremap k\| \|\|φφ<Esc>F\|i
inoremap k# #{}φφ<Esc>F}i
inoremap k$ ${}φφ<Esc>F}i
inoremap k] [[::]]<Esc>F:i
imap <S-Tab> <esc>/φ[^φ]*φ/<cr>li
imap <C-F10> <esc>xdfφi
map ,s <esc>:%s::g<left><left>
imap <m-h> <esc>i
imap <m-l> <esc><right>a
imap <m-j> <esc>gja
imap <m-k> <esc>gka
map ;ml <esc>mrGo<cr><cr># vim: <esc>a
map ;sp <esc>:set spell spelllang=fr\|:set spell<cr>
vmap ,c "+ygv
nmap ,cs :%s///gn<cr>
vmap ,x "+d
map ,p "*p
map ,v "+p
map ,nh :nohl<cr>
map ,dt k:r! e_time_datehour<cr>2j

"nerdtree
"let NERDTreeChDirMode=2
"let NERDTreeQuitOnOpen=1
"let NERDTreeShowBookmarks=1
"let NERDTreeShowHidden=1
"let NERDTreeWinSize=50
"

"unknown
let Tlist_Close_On_Select=1
let Tlist_Exit_OnlyWindow=1
let Tlist_Use_SingleClick=1
let Tlist_WinWidth=50

" vim: ft=vim expandtab
